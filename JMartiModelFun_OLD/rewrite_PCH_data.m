% clear
close all
clc

% fname = 'E:\Users\Amauri\Documents\ATPdata\work\jmovl.pch';

%%% This is the PCH file generated by the original LCC object
fname = 'E:\Users\Amauri\Documents\ATPdata\work\pipet.pch';

fid = fopen(fname);
data = textscan(fid, '%s', 'delimiter', '\n');

fclose(fid);

%%% Read all poles and residues for each mode from the PCH file
ord=6;
for i=1:ord
    idx = find(contains(data{1},['-' num2str(i) 'IN___']));
    str=split(data{1}(idx+1));
    NORDZC=str2num(str{1});
    VALZC=str2num(str{2});
    NUMLINES=ceil(NORDZC/3);
    c=1;
    reszc=[];
    for j=1:NUMLINES
        str=split(data{1}(idx+1+j));
        for k=1:length(str)
            reszc(c) = str2num(str{k});
            c=c+1;
        end
    end
    c=1;
    polzc=[];
    for j=1:NUMLINES
        str=split(data{1}(idx+NUMLINES+1+j));
        for k=1:length(str)
            polzc(c) = str2num(str{k});
            c=c+1;
        end
    end
    fitZcRef(i).mode = i;
    fitZcRef(i).NORD = NORDZC;
    fitZcRef(i).zInf = VALZC;
    fitZcRef(i).pol = polzc';
    fitZcRef(i).res = reszc';
    idx2=idx+2*NUMLINES+1;
    str=split(data{1}(idx2+1));
    NORDA1=str2num(str{1});
    VALA1=str2num(str{2});
    NUMLINES=ceil(NORDA1/3);
    c=1;
    resa1=[];
    for j=1:NUMLINES
        str=split(data{1}(idx2+1+j));
        for k=1:length(str)
            resa1(c) = str2num(str{k});
            c=c+1;
        end
    end
    c=1;
    pola1=[];
    for j=1:NUMLINES
        str=split(data{1}(idx2+1+NUMLINES+j));
        for k=1:length(str)
            pola1(c) = str2num(str{k});
            c=c+1;
        end
    end
    fitA1Ref(i).mode = i;
    fitA1Ref(i).NORD = NORDA1;
    fitA1Ref(i).tauInf = VALA1;
    fitA1Ref(i).pol = pola1';
    fitA1Ref(i).res = resa1';
    
end

idx3=idx2+1+2*NUMLINES;
lines_per_mode=ceil(ord/6);

for i=1:ord
    for j=1:lines_per_mode
        if i==1
            strre=split(data{1}(idx3+j+i-1));
            strim=split(data{1}(idx3+j+i-1+lines_per_mode));
        else
            strre=split(data{1}(idx3+j+2*i-2));
            strim=split(data{1}(idx3+j+2*i-2+lines_per_mode));
        end
        c=1;
        for k=1:length(strre)
            re(i,c) = str2num(strre{k});
            c=c+1;
        end
        c=1;
        for k=1:length(strim)
            im(i,c) = str2num(strim{k});
            c=c+1;
        end
    end
end
Ti=complex(re,im);

%%% Refactor the same data into a new PCH, for testing purposes
fname = 'E:\Users\Amauri\Documents\ATPdata\projects\Usp\pipetmatlab.pch';
fcontent = punchJMartiCard(ord, fitZcRef, fitA1Ref, Ti, fname);


%%% Plot frequency responses from original data
for m=1:ord
    % [b,a] = residue(fitZcRef(m).res, fitZcRef(m).pol, fitZcRef(m).zInf);
    s=1i*2*pi*f;
    for k=1:length(s)
        h(k) = sum(fitZcRef(m).res ./ (s(k) - fitZcRef(m).pol)) + fitZcRef(m).zInf;
    end
    
    mode(m).Zch=h;
    figure(5)
    subplot(2,1,1)
    semilogx(f,abs(h));hold all
    xlabel('Frequency [Hz]');
    ylabel('Zc magnitude');
    axis tight
    grid on
    
    
    subplot(2,1,2)
    semilogx(f,unwrap(angle(h))*180/pi,'DisplayName', ['mode #' num2str(m) ' - ATP']);hold all
    xlabel('Frequency [Hz]');
    ylabel('Zc angle [deg]');
    axis tight
    grid on
    legend;
    
    for k=1:length(s)
        h(k) = sum(fitA1Ref(m).res ./ (s(k) - fitA1Ref(m).pol));
    end
    
    mode(m).A1=h;
    figure(6)
    subplot(2,1,1)
    semilogx(f,abs(h));hold all
    xlabel('Frequency [Hz]');
    ylabel('A1 magnitude');
    axis tight
    grid on
    
    
    subplot(2,1,2)
    semilogx(f,unwrap(angle(h))*180/pi,'DisplayName', ['mode #' num2str(m) ' - ATP']);hold all
    xlabel('Frequency [Hz]');
    ylabel('A1 angle [deg]');
    axis tight
    grid on
    legend;
end

% %%% Now let's rebuild the response from ATP using VF:
% 
% line_length = 1000;
% % General flags
% spyplot_FLAG=0;
% msg_FLAG=true;
% ERR=1/100;
% stable_FLAG=0;
% passive_FLAG =1;
% 
% % Zc fit
% asymp_FLAG=2; %d!=0,e=0
% for m=1:ord
%     freq=f;
%     fun=mode(m).Zch;
%     [pol, res, infval, NORD, ffit, err]=vectfit_wrapper(fun,freq,ERR,asymp_FLAG,stable_FLAG,passive_FLAG,spyplot_FLAG,msg_FLAG);
%     fitZcATP2(m).mode = m;
%     fitZcATP2(m).NORD = NORD;
%     fitZcATP2(m).zInf = infval;
%     fitZcATP2(m).pol = pol;
%     fitZcATP2(m).res = res;
%     
%     figure(7)
%     semilogx(f,abs(fun), 'DisplayName', ['mode #' num2str(m)]);hold all;
%     semilogx(f,abs(ffit), 'o', 'DisplayName', ['fit mode #' num2str(m)]);hold all;
% end
% figure(7)
% axis tight
% xlabel('Frequency [Hz]')
% ylabel('Z_{ch} [\Omega]')
% grid on
% legend
% 
% % A1 fit
% spyplot_FLAG=0;
% asymp_FLAG=1; %d=e=0;
% for m=1:ord
%     freq=f;
%     tau=fitA1Ref(m).tauInf;
%     fun = mode(m).A1; %.*exp(1i*2*pi.*freq(m).*tau);
%     [pol, res, infval, NORD, ffit, err]=vectfit_wrapper(fun,freq,ERR,asymp_FLAG,stable_FLAG,passive_FLAG,spyplot_FLAG,msg_FLAG);
%     fitA1ATP2(m).mode = m;
%     fitA1ATP2(m).NORD = NORD;
%     fitA1ATP2(m).tauInf = tau;
%     fitA1ATP2(m).pol = pol;
%     fitA1ATP2(m).res = res;
%     
%     figure(8)
%     semilogx(f,abs(fun), 'DisplayName', ['mode #' num2str(m)]);hold all;
%     semilogx(f,abs(ffit), 'o', 'DisplayName', ['fit mode #' num2str(m)]);hold all;
% end
% figure(8)
% axis tight
% xlabel('Frequency [Hz]')
% ylabel('Propagation factor [unitless]')
% grid on
% legend;
% 
% fname=['.\lisdata\transf_matrix.mat'];
% load(fname);
% 
% %%% Punch newly fitted data to a new PCH card
% fname = 'E:\Users\Amauri\Documents\ATPdata\projects\Usp\pipetmatlabnewfit.pch';
% fcontent = punchJMartiCard(ord, fitZcATP2, fitA1ATP2, Ti, fname);