%% Initialization

clear; % Remove items from workspace, freeing up system memory
clc; % Clears all input and output from the Command Window display, giving you a "clean screen"
close all; % Deletes all figures whose handles are not hidden
format longEng; % Engineering format that has exactly 16 significant digits and a power that is a multiple of three.

ord=3; % Number of conductors
num_files=74; % Number of input pul files
length=10000; % Length in meters

filedata_Z=importdata('fbatchZ.txt'); % Input file for Z - ????????? ?? ?? ??????? ????????? ?????????? ?
filedata_Y=importdata('fbatchY_Sunde.txt'); % Input file for Y - ????????? ?? ?? ??????? ????????? ?????????? ? 
freq=importdata('freq.txt'); % Input file for frequencies - ????????? ?? ??? ???????? ?????????? f

path='D:\TL_MATLAB_C++\website_software\mode_decomp_funs'; % Main path
path_Z=strcat(path,'\Z'); % Path for Z values - Theofilos's or Sunde's model
path_Y=strcat(path,'\Y'); % Path for Y values - Theofilos's or Sunde's model

Z=zeros(num_files,ord^2); % (num_files x ord^2)
Y=zeros(num_files,ord^2); % (num_files x ord^2)

%% Parsing and building of Z & Y

for k=1:1:num_files 
    
    cd(path_Z); % ?????? ??? directory ??? ?????? ?
    Ztmp=parse_matrix(k,filedata_Z,ord); % Function parse_matrix sto path_Z!!

    cd(path_Y); % ?????? ??? directory ??? ?????? ?
    Ytmp=parse_matrix(k,filedata_Y,ord); % Function parse_matrix sto path_Y!!
     
    cd(path); % ?????? ??? directory ??? ?????? path
    [Zdis,Ydis]=zyph_param(Ztmp,Ytmp,ord); % Function zyph_param - ?????????? ?? ?' ??? ?' ??? ??? ???????? ????????? ??? ??? num_files - (ord x ord) ??? ?? 2
             
    %Ydis=calc_Y_Ametani_1ph(freq(k)); % Extra - ???????? ?????????!! - ?' ?? ???? ????? Ametani ??? 1ph ??????? ???? ????????? ??? ???!! ??? ??? ???????? ????????? ??? ??? num_files - (ord x ord) 
    %Ydis=calc_Y_Ametani_3ph(freq(k)); % Extra - ???????? ?????????!! - ?' ?? ???? ????? Ametani ??? 3ph ??????? ?? flat ??????? ???? ????????? ??? ???!! ??? ??? ???????? ????????? ??? ??? num_files - (ord x ord) 
    
    for o=1:ord
        Z(k,(o-1)*ord+1:o*ord)=Zdis(o,:); % ?????????? ???? ??? ?' ??? ???????? ????????? - (num_files x ord^2)
        Y(k,(o-1)*ord+1:o*ord)=Ydis(o,:); % ?????????? ???? ??? Y' ??? ???????? ????????? - (num_files x ord^2)
    end
end

%% Calculation of Ti & g
tic
%[Ti,g]=simple_QR_decomp(ord,num_files,Z,Y); % ???? QR decomposition ????? ???????? ??? eigenvector switchover - ?????????? ?????? ??????????????? Ti (current) (num_files x ord^2) ??? ????????? g (sqrt) (num_files x ord)

[Ti,g]=atp_Tsiam(Z,Y,ord,freq,num_files); % ? ????????? ??? ?????????? - ??????????? ??? QR decomposition ??? ?????????????? ??? ??????????? ?????? ?? ???? ??? ??????????? ??? ATP/EMTP - ?????????? ?????? ??????????????? Ti (current) ((num_files x ord^2)) ??? ????????? g (sqrt) (num_files x ord)

%[Ti,g]=product_correl_str(ord,num_files,Z,Y,freq); % ????????? ??? ??????? ?? eigenvector switchover ??????????? ??? ?????????? ????????????? ?? ???????????? ???????? ?? ??? ?????????? ?????????? - ???????????? ???? ??? simple_QR_decomp ???? ??? atp_Tsiam ??? ??? ?????? ?????????? - ?????????? ?????? ??????????????? Ti (current) (num_files x ord^2) ??? ????????? g (sqrt) (num_files x ord)

%[Ti,g]=product_correl_back(ord,num_files,Z,Y,freq); % ????????? ??? ??????? ?? eigenvector switchover ?????????? ??? ?????????? ????????????? ?? ???????????? ???????? ?? ??? ?????????? ?????????? - ???????????? ???? ??? simple_QR_decomp ???? ??? atp_Tsiam ??? ??? ?????? ?????????? - ?????????? ?????? ??????????????? Ti (current) (num_files x ord^2) ??? ????????? g (sqrt) (num_files x ord)

%[Ti,g]=NR_calc_norm_str(ord,num_files,Z,Y,freq); % ????????? Newton-Raphson ?? seeding ??????????? ??? ?????????? ??? ??????? ?? eigenvector switchover - ?????????? ?????? ??????????????? Ti (current) (num_files x ord^2) ??? ????????? g (sqrt) (num_files x ord)

%[Ti,g]=NR_calc_norm_back(ord,num_files,Z,Y,freq); % ????????? Newton-Raphson ?? seeding ?????????? ??? ?????????? ??? ??????? ?? eigenvector switchover - ?????????? ?????? ??????????????? Ti (current) (num_files x ord^2) ??? ????????? g (sqrt) (num_files x ord)

%[Ti,g]=SQP_calc_norm_str(ord,num_files,Z,Y,freq); % ?????????? ???????!!! - ????????? Sequential-Quadratic-Programming (?????????????? ??????????-???????????? ?? quadratic constraints) ?? seeding ??????????? ??? ?????????? ??? ??????? ?? eigenvector switchover - ?????????? ?????? ??????????????? Ti (current) (num_files x ord^2) ??? ????????? g (sqrt) (num_files x ord)

%[Ti,g]=SQP_calc_norm_back(ord,num_files,Z,Y,freq); % ?????????? ???????!!! - ????????? Sequential-Quadratic-Programming (?????????????? ??????????-???????????? ?? quadratic constraints) ?? seeding ?????????? ??? ?????????? ??? ??????? ?? eigenvector switchover - ?????????? ?????? ??????????????? Ti (current) (num_files x ord^2) ??? ????????? g (sqrt) (num_files x ord)

%[Ti,g]=LM_calc_norm_str(ord,num_files,Z,Y,freq); % ????????? Levenberg-Marquardt ?? seeding ??????????? ??? ?????????? ??? ??????? ?? eigenvector switchover - ?????????? ?????? ??????????????? Ti (current) (num_files x ord^2) ??? ????????? g (sqrt) (num_files x ord)

%[Ti,g]=LM_calc_norm_back(ord,num_files,Z,Y,freq); % ????????? Levenberg-Marquardt ?? seeding ?????????? ??? ?????????? ??? ??????? ?? eigenvector switchover - ?????????? ?????? ??????????????? Ti (current) (num_files x ord^2) ??? ????????? g (sqrt) (num_files x ord)

%[Ti,g]=LM_fast_impl(ord,num_files,Z,Y,freq); % ????! - ?????????? ???????!

%[Ti,g]=LM_alt_impl(ord,num_files,Z,Y,freq); % ????! - ?????????? ???????!
toc

%% Minimization of imaginary part

%[Ti]=min_imag_part(Ti,ord,num_files); % ????????? ??? ??????? ?? ?????????? ????? ??????????????? ????? ??? ????????? ??? ??? ????????? ??? ????????? ??? ?????????? ??? ???????? ??? ?? ?????? ??? ???? ????????? ???? ??????????????? - ?????????? ?????? ??????????????? Ti (current) (num_files x ord^2)

%[Ti]=atp_min_imag(Ti,ord,num_files,Y); % ????????? ??? ??????? ?? ?????????? ????? ?? ???? ?? ??????????? ??? ATP/EMTP - ?????????? ?????? ??????????????? Ti (current) (num_files x ord^2)

%[Ti]=suppr_first_elem(Ti,ord,num_files); % ????????? ??? ??????? ?? ?????????? ????? ?? ???? ?? ???????? ???? ??? ????????? ??? ??????????????? ?? ?????? ???????????? ???????? - ?????????? ?????? ??????????????? Ti (current) (num_files x ord^2)

%% Calculation of characteristic impedance and admittance

[Zch_mod,Ych_mod,Zch,Ych]=calc_char_imped_admit(Ti,Z,Y,ord,num_files);

%% Calculation of propagation function

%H_mod,P_mod,H,P,delay]=calc_prop_function(Ti,g,length,ord,num_files,freq);

%% Calculation of transfer function

%[F_mod,F,f]=calc_transf_function(Ti,g,length,ord,freq);

%% Vector Fitting

%[Ti_vf,fit,check]=vector_fit(Ti,ord,num_files,freq);
%check

%% Calculation of Poles and Zeros

%[pol_co]=calc_poles_zeros(ord,fit);

%% Dominant Frequency & Media Propagation Characteristics

%[f,vel_dom_OC,vel_dom_SC]=calc_dom(freq,length);

%[vel_aera,vel_ghs]=calc_media_OHTL(freq);
%[vel_aera,vel_ghs,vel_mon1,vel_mon2]=calc_media_SC_cable(freq);

%% Plot attenuation, velocity, Zch_mod, Ych_mod, Zch, Ych, H_mod, H & Ti

a=real(g);
b=imag(g);
vel=zeros(num_files,ord);

for o=1:ord
    vel(:,o)=(2*pi*freq)./b(:,o);
end

figure(1)
subplot(2,1,1)
for o=1:ord
    loglog(freq,a(:,o))
    hold all
end
hold off
subplot(2,1,2)
for o=1:ord
    semilogx(freq,vel(:,o))
    hold all
end
hold off

% figure(2)
% for k=1:ord
%     subplot(ord,2,2*k-1)
%     for o=1:ord
%         semilogx(freq,real(Ti(:,k+(o-1)*ord)))
%         %semilogx(freq,real(Ti(:,k+(o-1)*ord)),freq,real(Ti_vf(:,k+(o-1)*ord))) % ??? vector fitting
%         hold all
%     end
%     hold off
%     subplot(ord,2,2*k)
%     for o=1:ord
%         semilogx(freq,imag(Ti(:,k+(o-1)*ord)))
%         %semilogx(freq,imag(Ti(:,k+(o-1)*ord)),freq,imag(Ti_vf(:,k+(o-1)*ord)))
%         hold all
%     end
%     hold off
% end

figure(3)
for k=1:ord
    subplot(ord,2,2*k-1)
    for o=1:ord
        semilogx(freq,abs(Ti(:,k+(o-1)*ord)))
        %semilogx(freq,abs(Ti(:,k+(o-1)*ord)),freq,abs(Ti_vf(:,k+(o-1)*ord))) % ??? vector fitting
        hold all
    end
    hold off
    subplot(ord,2,2*k)
    for o=1:ord
        %semilogx(freq,radtodeg(angle(Ti(:,k+(o-1)*ord))))
        semilogx(freq,radtodeg(unwrap(angle(Ti(:,k+(o-1)*ord)))))
        %semilogx(freq,radtodeg(acos(real(Ti(:,k+(o-1)*ord))./abs(Ti(:,k+(o-1)*ord)))))
        %semilogx(freq,radtodeg(asin(imag(Ti(:,k+(o-1)*ord))./abs(Ti(:,k+(o-1)*ord)))))
        %semilogx(freq,radtodeg(unwrap(angle(Ti(:,k+(o-1)*ord)))),freq,radtodeg(unwrap(angle(Ti_vf(:,k+(o-1)*ord))))) % ??? vector fitting
        hold all
    end
    hold off
end

figure(4)
subplot(2,1,1)
for o=1:ord
    semilogx(freq,abs(Zch_mod(:,o)))
    hold all
end
hold off
subplot(2,1,2)
for o=1:ord
    semilogx(freq,radtodeg(unwrap(angle(Zch_mod(:,o)))))
    hold all
end
hold off
 
% figure(5)
% subplot(2,1,1)
% for o=1:ord
%     semilogx(freq,abs(Ych_mod(:,o)))
%     hold all
% end
% hold off
% subplot(2,1,2)
% for o=1:ord
%     semilogx(freq,radtodeg(unwrap(angle(Ych_mod(:,o)))))
%     hold all
% end
% hold off

% figure(6)
% for k=1:ord
%     subplot(ord,2,2*k-1)
%     for o=1:ord
%         semilogx(freq,abs(Zch(:,k+(o-1)*ord)))
%         hold all
%     end
%     hold off
%     subplot(ord,2,2*k)
%     for o=1:ord
%         %semilogx(freq,radtodeg(angle(Zch(:,k+(o-1)*ord))))
%         semilogx(freq,radtodeg(unwrap(angle(Zch(:,k+(o-1)*ord)))))
%         %semilogx(freq,radtodeg(acos(real(Zch(:,k+(o-1)*ord))./abs(Zch(:,k+(o-1)*ord)))))
%         %semilogx(freq,radtodeg(unwrap(acos(real(Zch(:,k+(o-1)*ord))./abs(Zch(:,k+(o-1)*ord))))))
%         %semilogx(freq,radtodeg(asin(imag(Zch(:,k+(o-1)*ord))./abs(Zch(:,k+(o-1)*ord)))))
%         %semilogx(freq,radtodeg(unwrap(asin(imag(Zch(:,k+(o-1)*ord))./abs(Zch(:,k+(o-1)*ord))))))
%         hold all
%     end
%     hold off
% end

% figure(7)
% for k=1:ord
%     subplot(ord,2,2*k-1)
%     for o=1:ord
%         semilogx(freq,abs(Ych(:,k+(o-1)*ord)))
%         hold all
%     end
%     hold off
%     subplot(ord,2,2*k)
%     for o=1:ord
%         %semilogx(freq,radtodeg(angle(Ych(:,k+(o-1)*ord))))
%         semilogx(freq,radtodeg(unwrap(angle(Ych(:,k+(o-1)*ord)))))
%         %semilogx(freq,radtodeg(acos(real(Ych(:,k+(o-1)*ord))./abs(Ych(:,k+(o-1)*ord)))))
%         %semilogx(freq,radtodeg(unwrap(acos(real(Ych(:,k+(o-1)*ord))./abs(Ych(:,k+(o-1)*ord))))))
%         %semilogx(freq,radtodeg(asin(imag(Ych(:,k+(o-1)*ord))./abs(Ych(:,k+(o-1)*ord)))))
%         %semilogx(freq,radtodeg(unwrap(asin(imag(Ych(:,k+(o-1)*ord))./abs(Ych(:,k+(o-1)*ord))))))
%         hold all
%     end
%     hold off
% end

% figure(8)
% subplot(2,1,1)
% for o=1:ord
%     semilogx(freq,abs(P_mod(:,o)))
%     hold all
% end
% hold off
% subplot(2,1,2)
% for o=1:ord
%     %semilogx(freq,radtodeg(angle(P_mod(:,o))))
%     %semilogx(freq,radtodeg(unwrap(angle(P_mod(:,o)))))
%     semilogx(freq,radtodeg((-b(:,o)*length)+2*pi*freq*delay(o)))
%     hold all
% end
% hold off

% figure(9)
% subplot(2,1,1)
% for o=1:ord
%     semilogx(freq,abs(H_mod(:,o)))
%     hold all
% end
% hold off
% subplot(2,1,2)
% for o=1:ord
%     %semilogx(freq,radtodeg(angle(H_mod(:,o))))
%     %semilogx(freq,radtodeg(unwrap(angle(H_mod(:,o)))))
%     semilogx(freq,radtodeg(-b(:,o)*length))
%     hold all
% end
% hold off

% figure(10)
% for k=1:ord
%     subplot(ord,2,2*k-1)
%     for o=1:ord
%         semilogx(freq,abs(P(:,k+(o-1)*ord)))
%         hold all
%     end
%     hold off
%     subplot(ord,2,2*k)
%     for o=1:ord
%         %semilogx(freq,radtodeg(angle(P(:,k+(o-1)*ord))))
%         semilogx(freq,radtodeg(unwrap(angle(P(:,k+(o-1)*ord)))))
%         %semilogx(freq,radtodeg(acos(real(P(:,k+(o-1)*ord))./abs(P(:,k+(o-1)*ord)))))
%         %semilogx(freq,radtodeg(unwrap(acos(real(P(:,k+(o-1)*ord))./abs(P(:,k+(o-1)*ord))))))
%         %semilogx(freq,radtodeg(asin(imag(P(:,k+(o-1)*ord))./abs(P(:,k+(o-1)*ord)))))
%         %semilogx(freq,radtodeg(unwrap(asin(imag(P(:,k+(o-1)*ord))./abs(P(:,k+(o-1)*ord))))))
%         hold all
%     end
%     hold off
% end

% figure(11)
% for k=1:ord
%     subplot(ord,2,2*k-1)
%     for o=1:ord
%         semilogx(freq,abs(H(:,k+(o-1)*ord)))
%         hold all
%     end
%     hold off
%     subplot(ord,2,2*k)
%     for o=1:ord
%         %semilogx(freq,radtodeg(angle(H(:,k+(o-1)*ord))))
%         semilogx(freq,radtodeg(unwrap(angle(H(:,k+(o-1)*ord)))))
%         %semilogx(freq,radtodeg(acos(real(H(:,k+(o-1)*ord))./abs(H(:,k+(o-1)*ord)))))
%         %semilogx(freq,radtodeg(unwrap(acos(real(H(:,k+(o-1)*ord))./abs(H(:,k+(o-1)*ord))))))
%         %semilogx(freq,radtodeg(asin(imag(H(:,k+(o-1)*ord))./abs(H(:,k+(o-1)*ord)))))
%         %semilogx(freq,radtodeg(unwrap(asin(imag(H(:,k+(o-1)*ord))./abs(H(:,k+(o-1)*ord))))))
%         hold all
%     end
%     hold off
% end

% figure(12)
% for o=1:ord
%     semilogx(freq,vel(:,o))
%     hold all
% end
% for o=1:1:3
%     semilogx(f,vel_dom_OC(:,o),f,vel_dom_SC(:,o))
%     hold all
% end
% %semilogx(freq,vel_aera,freq,vel_ghs)
% semilogx(freq,vel_ghs,freq,vel_mon1,freq,vel_mon2)
% %semilogx(freq,vel_aera,freq,vel_ghs,freq,vel_mon1,freq,vel_mon2)
% hold off

% figure(13)
% subplot(2,1,1)
% for o=1:ord
%     %semilogx(f,abs(F_mod(:,o)))
%     semilogx(f,20*log10(abs(F_mod(:,o))))
%     hold all
% end
% hold off
% subplot(2,1,2)
% for o=1:ord
%     %semilogx(f,radtodeg(angle(F_mod(:,o))))
%     semilogx(f,radtodeg(unwrap(angle(F_mod(:,o)))))
%     hold all
% end
% hold off

% figure(14)
% for k=1:ord
%     subplot(ord,2,2*k-1)
%     for o=1:ord
%         %semilogx(f,abs(F(:,k+(o-1)*ord)))
%         semilogx(f,20*log10(abs(F(:,k+(o-1)*ord))))
%         hold all
%     end
%     hold off
%     subplot(ord,2,2*k)
%     for o=1:ord
%         %semilogx(f,radtodeg(angle(F(:,k+(o-1)*ord))))
%         semilogx(f,radtodeg(unwrap(angle(F(:,k+(o-1)*ord)))))
%         %semilogx(f,radtodeg(acos(real(F(:,k+(o-1)*ord))./abs(F(:,k+(o-1)*ord)))))
%         %semilogx(f,radtodeg(unwrap(acos(real(F(:,k+(o-1)*ord))./abs(F(:,k+(o-1)*ord))))))
%         %semilogx(f,radtodeg(asin(imag(F(:,k+(o-1)*ord))./abs(F(:,k+(o-1)*ord)))))
%         %semilogx(f,radtodeg(unwrap(asin(imag(F(:,k+(o-1)*ord))./abs(F(:,k+(o-1)*ord))))))
%         hold all
%     end
%     hold off
% end